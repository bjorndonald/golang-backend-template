version: '1.0'
services:

  # postgres-db:
  #   container_name: postgres-db
  #   image: postgres:16-bookworm
  #   command: postgres -c config_file=/var/lib/postgresql/data/postgresql.conf
  #   restart: on-failure
  #   env_file: .env
  #   ports:
  #     - '${POSTGRES_PORT}:${POSTGRES_PORT}'
  #   volumes:
  #     - postgresql:/data/postgresql
  #     - ./files/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
  #     - /Library/PostgreSQL/16/data/postgresql.conf:/etc/postgresql/postgresql.conf
  #   networks:
  #     - APPNet
  postgres-db:
    container_name: postgres-db
    image: postgres:16-bookworm
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 230694
      POSTGRES_DB: lasgcce
    # volumes:
      # - postgresql:/data/postgresql
      # - postgres-data:/var/lib/postgresql/data
      # - ./pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
    networks:
      - APPNet
    ports:
      - "5432:5432"
  
  swagger-docs:
    image: swaggerapi/swagger-ui
    container_name: swagger-docs
    restart: on-failure
    volumes:
      - ./docs/swagger.json:/docs/swagger.json
    environment:
      SWAGGER_JSON: /docs/swagger.json
    ports:
      - "6098:8080"
    networks:
      - APPNet
    
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - APPNet

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    networks:
      - APPNet
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    
  api:
    image: cosmtrek/air
    container_name: api
    restart: on-failure
    env_file: 
      - .env
    ports:
      -  '${PORT}:${PORT}'
    volumes:
      - '../lasgcce:/lasgcce'
      - '~/.ssh/id_rsa:/root/.ssh/id_rsa'
      - '~/.ssh/known_hosts:/root/.ssh/known_hosts'
      - '~/.gitconfig:/root/.gitconfig'
      - '../lasgcce/docs:/lasgcce/docs'
    working_dir: '/lasgcce'
    networks:
      - APPNet
    depends_on:
      - postgres-db
      

networks:
  APPNet:
    driver: bridge

volumes:
  postgresql: